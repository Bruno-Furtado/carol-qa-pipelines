-- FUNCTIONS

CREATE TEMP FUNCTION GeopointStringFromGeography(coord GEOGRAPHY) RETURNS GEOGRAPHY AS (
  IF(
    (coord IS NULL) OR (ST_X(coord) IS NULL) OR (ST_Y(coord) IS NULL),
    CAST(NULL AS GEOGRAPHY),
    coord
  )
);

CREATE TEMP FUNCTION GeopointStringFromString(str STRING) RETURNS STRING AS (
  IF(
    (str IS NULL) OR (LENGTH(TRIM(str)) = 0) OR CONTAINS_SUBSTR(str, ',') = FALSE,
    CAST(NULL AS STRING),
    str
  )
);

-- QUERIES

WITH lk_test_coordinates AS (
  SELECT
    stg.*
  FROM
  (
    SELECT
      t.*,
      ROW_NUMBER() OVER (PARTITION BY t.mdmTenantId, t.id ORDER BY t.mdmCounterForEntity DESC) AS ranking
    FROM
      stg_test_coordinates_test_coordinates AS t
    WHERE
      t.mdmDeleted IS NULL OR t.mdmDeleted = FALSE
  ) AS stg
  WHERE
    stg.ranking = 1
),

test_coordinates AS (
  SELECT
    stg.id as mdmpkid,
    stg.name AS mdmname,
    GeopointStringFromGeography(stg.coordinates) AS mdmcoordinates,
    GeopointStringFromString(stg.coordinates_string) AS coordinates2,
    ARRAY(
      SELECT AS STRUCT
        (address[SAFE_ORDINAL(1)].addresstype) AS mdmaddresstype,
        (address[SAFE_ORDINAL(1)].address1) AS mdmaddress1,
        (address[SAFE_ORDINAL(1)].address2) AS mdmaddress2,
        (address[SAFE_ORDINAL(1)].address3) AS mdmaddress3,
        (address[SAFE_ORDINAL(1)].zipcode) AS mdmzipcode,
        (address[SAFE_ORDINAL(1)].city) AS mdmcity,
        (address[SAFE_ORDINAL(1)].state) AS mdmstate,
        (address[SAFE_ORDINAL(1)].country) AS mdmcountry,
        GeopointStringFromString(address[SAFE_ORDINAL(1)].coordinates) AS mdmcoordinates
    ) AS mdmaddress
    --metadata--
  FROM
    lk_test_coordinates AS stg
)

SELECT
    *,
    (
      (mdmpkid IS NULL OR LENGTH(TRIM(mdmpkid)) = 0)
    ) AS mdmDeleted
FROM
  test_coordinates
ORDER BY
  mdmpkid
